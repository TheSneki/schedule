from datetime import date
from typing import Any, Dict, List

from apps.feedback.models import Profile
from apps.main.utils.date import get_day_of_week, to_message_format
from apps.timetables.models import Lesson
from apps.timetables.models.group import Group


def build_status_message(profile: Profile) -> str:
    group = profile.get_group()
    result = ""
    if group:
        result += f"–ì—Ä—É–ø–ø–∞: {group.title}\n"
        result += f"–£—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è: {group.level.title.capitalize()}\n"
    else:
        result += "–ì—Ä—É–ø–ø–∞: –ù–µ –≤—ã–±—Ä–∞–Ω–∞üò•\n"
    result += "\n"
    send_notifications = "‚úÖ –í–∫–ª—é—á–µ–Ω—ã" if profile.send_notifications else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω—ã"
    result += f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–Ω—è—Ç–∏—è—Ö: {send_notifications}\n"
    result += "\n"
    result += f"–°–µ–π—á–∞—Å —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {profile.days_offset} –¥–Ω–µ–π –≤–ø–µ—Ä–µ–¥\n"
    result += "\n"
    for account in profile.get_accounts_in_messengers():
        messenger = account.get_messenger()
        result += f"–ò–º–µ–µ—Ç—Å—è –∞–∫–∫–∞—É–Ω—Ç –≤ {messenger.title}\n"
    return result


def build_lessons_message(lessons_by_date: Dict[date, List[Lesson]], group: Group, date_start: date, date_end: date = None) -> str:
    result = f"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ {to_message_format(date_start)}"
    if date_end is not None:
        result += f" - {to_message_format(date_end)}"
    result += "\n"
    result += f"–ì—Ä—É–ø–ø–∞: {group.title}\n\n"
    for date in lessons_by_date:
        result += f"{get_day_of_week(date).capitalize()} {to_message_format(date)}\n"
        for index, lesson in enumerate(lessons_by_date[date]):
            result += f"{index + 1}. {lesson.subject.title}\n"
            result += f"\tüïê {to_message_format(lesson.time_start)} - {to_message_format(lesson.time_end)}\n"
            result += f"\tüë§ {lesson.teacher.name}\n"
            if lesson.classroom:
                result += f"\tüèõ {lesson.classroom.title}\n"
            if lesson.href:
                result += f"\t–°—Å—ã–ª–∫–∞: {lesson.href}\n"
            result += f"\t–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: {lesson.note}\n"
        result += "\n"
    return result


def get_note_message() -> str:
    note_message = "–ü—Ä–∏–≤–µ—Ç!\n"
    note_message += "–¢—ã –ø–æ–ø—Ä–æ—Å–∏–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–Ω—è—Ç–∏—è—Ö "
    note_message += "–≤ –¥–µ–Ω—å –∏—Ö –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è.\n"
    note_message += "–ü–æ—ç—Ç–æ–º—É, –Ω–∏–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é —Ç–µ–±–µ —Ç–≤–æ–∏ –∑–∞–Ω—è—Ç–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è.\n"
    note_message += "–¢—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –æ—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö"
    return note_message
